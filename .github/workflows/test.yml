name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v3.0.0
        with:
          java-version: 13
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Create test classes for testing
        run: ./gradlew jvmTestClasses

      - name: Test animations
        run: |
          ./gradlew jvmTest --tests "animatedledstrip.test.animations.*"
          mv build/reports/jacoco/test/jacocoTestReport.xml build/reports/jacoco/test/jacocoTestReport-animations.xml
      - name: Test colors
        run: |
          ./gradlew jvmTest --tests "animatedledstrip.test.colors.*"
          mv build/reports/jacoco/test/jacocoTestReport.xml build/reports/jacoco/test/jacocoTestReport-colors.xml
      - name: Test communication
        run: |
          ./gradlew jvmTest --tests "animatedledstrip.test.communication.*"
          mv build/reports/jacoco/test/jacocoTestReport.xml build/reports/jacoco/test/jacocoTestReport-communication.xml
      - name: Test leds
        run: |
          ./gradlew jvmTest --tests "animatedledstrip.test.leds.*"
          mv build/reports/jacoco/test/jacocoTestReport.xml build/reports/jacoco/test/jacocoTestReport-leds.xml
      - name: Cleanup Gradle Cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties

#  release-snapshot:
#    runs-on: ubuntu-latest
#    needs: test
#    steps:
#      - uses: actions/checkout@v2
#      - name: version_number
#        run: "echo \"::set-output name=als_version::$(./gradlew properties | grep '^version:' | sed 's/version: //g')\""
#
#      - run: echo ${{ steps.version_number.outputs.als_version }}
#      - name: Publish to Maven Snapshots
#        if: endsWith(steps.version_number.outputs.als_version, '-SNAPSHOT')
#        run: ./gradlew publish --stacktrace
#        env:
#          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
#          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
#          ORG_GRADLE_PROJECT_nexusUsername: ${{ secrets.NEXUS_USERNAME }}
#          ORG_GRADLE_PROJECT_nexusPassword: ${{ secrets.NEXUS_PASSWORD }}
