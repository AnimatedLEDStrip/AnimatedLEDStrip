name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.0.2
      - name: Set up JDK
        uses: actions/setup-java@v3.1.0
        with:
          distribution: "temurin"
          java-version: 17
          cache: "gradle"
      #      - name: Cache Gradle packages
      #        uses: actions/cache@v3.0.1
      #        with:
      #          path: |
      #            ~/.gradle/caches
      #            ~/.gradle/wrapper
      #          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
      #          restore-keys: |
      #            ${{ runner.os }}-gradle-
      - run: pwd
      - name: Create test classes for testing
        run: ./gradlew jvmTestClasses

      - name: Test animations
        run: ./gradlew koverXmlReport -DtestSet=animations
      - name: Test colors
        run: ./gradlew koverXmlReport -DtestSet=colors
      - name: Test communication
        run: ./gradlew koverXmlReport -DtestSet=communication
      - name: Test leds
        run: ./gradlew koverXmlReport -DtestSet=leds
      - uses: codecov/codecov-action@v3
        with:
          files:
            - build/kover/report-animations.xml
            - build/kover/report-colors.xml
            - build/kover/report-communication.xml
            - build/kover/report-leds.xml
#      - name: Cleanup Gradle Cache
#        run: |
#          rm -f ~/.gradle/caches/modules-2/modules-2.lock
#          rm -f ~/.gradle/caches/modules-2/gc.properties

#  release-snapshot:
#    runs-on: ubuntu-latest
#    needs: test
#    steps:
#      - uses: actions/checkout@v3.0.2
#      - name: version_number
#        run: "echo \"::set-output name=als_version::$(./gradlew properties | grep '^version:' | sed 's/version: //g')\""
#
#      - run: echo ${{ steps.version_number.outputs.als_version }}
#      - name: Publish to Maven Snapshots
#        if: endsWith(steps.version_number.outputs.als_version, '-SNAPSHOT')
#        run: ./gradlew publish --stacktrace
#        env:
#          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
#          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
#          ORG_GRADLE_PROJECT_nexusUsername: ${{ secrets.NEXUS_USERNAME }}
#          ORG_GRADLE_PROJECT_nexusPassword: ${{ secrets.NEXUS_PASSWORD }}
